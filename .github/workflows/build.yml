name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: 'bw_output'     
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Configure sonar-scanner
        uses: ./
        with:
          sonar-qube-url: http://9934c23e7c21.ngrok.io

      - name: Run build-wrapper
        run: |
          cd linux-cmake-gh-actions-sc     
          mkdir build
          cmake -S . -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ --config Release
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd linux-cmake-gh-actions-sc     
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

  build-via-action:
    name: Build using action
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # shallow clones should be disabled for a better relevancy of analysis

      - name: build and scan
        uses: ./
        with:
          sonar-qube-url: http://9934c23e7c21.ngrok.io
          pre-build: |
            cd linux-cmake-gh-actions-sc     
            mkdir build
            cmake -S . -B build
          build: cmake --build build/ --config release

  scan-via-compilation-database :
    name: Scan using compile commands
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # shallow clones should be disabled for a better relevancy of analysis

      - name: Generate compilation database
        run: |
          cd linux-cmake-gh-actions-sc     
          mkdir build
          cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=1

      - name: scan using compilation database
        uses: ./
        with:
          sonar-qube-url: http://9934c23e7c21.ngrok.io
          compilation-database: linux-cmake-gh-actions-sc/build/compile_commands.json
